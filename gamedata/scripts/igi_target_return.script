TARGET_NAME = "return"
PATTERN = "basic"

local TASK_STATUSES = igi_subtask.TASK_STATUSES

function is_failed(obj_data)
	local obj = igi_helper.alife_obj(obj_data.id)
	if not obj then return true end
	return obj:section_name() ~= obj_data.section_name
end

function ready_to_finish(obj_data)
	local obj = igi_helper.alife_obj(obj_data.id)
	if not obj then return end
	return obj.parent_id == 0
end

function get_status(entity)
	if is_failed(entity) then return TASK_STATUSES.FAILED
	elseif ready_to_finish(entity) then return TASK_STATUSES.READY_TO_FINISH
	else return TASK_STATUSES.RUNNING end
end

function finish_subtask(obj_data)
	local obj = igi_helper.alife_obj(obj_data.id)
	alife_release(obj)
	news_manager.relocate_item(db.actor, "out", obj_data.section_name, 1)
end

function quest_target(obj_data)
	local se_obj = igi_helper.alife_obj(obj_data.id)
	if not se_obj then return end

	return se_obj.parent_id == 65535 and obj_data.id or se_obj.parent_id
end

function get_item_cost(entity)
	return tonumber(ini_sys:r_string_ex(entity.section_name, "cost"))
end

function get_item_weight(entity)
	return tonumber(ini_sys:r_string_ex(entity.section_name, "inv_weight"))
end

function get_success_money(entity)
	return get_item_cost(entity)*get_item_weight(entity)/32
end

function get_success_goodwill(entity)
	return get_item_weight(entity)*10
end

function get_fail_goodwill(entity)
	return get_item_cost(entity)/(-400)
end
