local trace_dbg = igi_helper.trace_dbg
local trace_assert = igi_helper.trace_assert
local Link = igi_text_processor.Link

function broadcast_entity(entities, entity)
	for k,v in pairs(entities) do
		if type(v) == 'string' then
			entities[k] = Link.link_entity(v, entity)
		elseif type(v) == 'table' then
			broadcast_entity(v, entity)
		end
	end
end

function set_missing_group_ids(entities)
	local counters = count_entity_types(entities)
	for _, entity in pairs(entities) do
		if not entity.group_id then
			counters[entity.entity_type] = counters[entity.entity_type] + 1
			entity.group_id = counters[entity.entity_type]
		end
	end
end

function count_entity_types(entities)
	local counters = igi_utils.defaultdict(0)
	for _, entity in pairs(entities) do
		local counter = counters[entity.entity_type]
		if entity.group_id and (entity.group_id > counter) then
			counters[entity.entity_type] = entity.group_id
		end
	end
	return counters
end

function has_no_outer_links(tbl, entity)
	for k,v in pairs(tbl) do
		if type(v) == 'string' then
			for k2 in Link.iterator(v) do
				if not Link.from(k2, entity):is_pointed_to(entity) then
					return false
				end
			end
		elseif type(v) == 'table' and not has_no_outer_links(v, entity) then
			return false
		end
	end
	return true
end
