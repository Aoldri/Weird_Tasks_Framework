
local function build_goodwill_reward(CACHE, task_giver_id)
	local goodwill = 0
	local tg = igi_helper.alife_obj(task_giver_id)
	
	-- looks like it gives tg randomly :/
	local se_squad, se_task_giver
	if tg:clsid() == clsid.online_offline_group_s then
		se_task_giver = igi_helper.alife_obj(tg:commander_id())
		se_squad = tg
	else
		se_task_giver = tg
		se_squad = get_object_squad(tg)
	end
	
	local community_setup = {get_object_community(se_task_giver)}
	if string.find(community_setup[1], "trader") then
		community_setup = igi_db.get_value("misc.ltx", "trader_faction", se_task_giver:section_name())
		if not community_setup then community_setup = {se_squad:get_squad_community()} end
	end
	
	for id, entity in pairs(CACHE.target) do
		if entity.target then
			local target_tbl = igi_taskdata.get_target_table(entity.target)
			goodwill = goodwill + target_tbl.get_goodwill_reward(entity)
		end
	end
	return goodwill, community_setup
end

local function build_money_reward(CACHE, task_giver_id)
	local money = 0
	for id, entity in pairs(CACHE.target) do
		if entity.target then
			local target_tbl = igi_taskdata.get_target_table(entity.target)
			money = money + target_tbl.get_money_reward(entity)
		end
	end
	return money
end

function define_reward(CACHE, task_giver_id)
	local reward = {}
	local task_data = igi_taskdata.get_task_data(CACHE.task_name)
	if task_data.reward then
		for k,v in pairs(task_data.reward) do
			reward[k] = v
		end
	end
	if not reward.money then
		reward.money = build_money_reward(CACHE, task_giver_id)
	end
	if not reward.goodwill then
		reward.goodwill, reward.community = build_goodwill_reward(CACHE, task_giver_id)
	end
	return reward
end

function give_rewards(rewards)
	local money = {rewards.money*0.8, rewards.money*1.1}
	xr_effects.reward_random_money(nil, nil, money)
	if not rewards.community then return end
	
	local parts = 0
	for i=1,#rewards.community do
		parts = parts + i
	end
	
	for i=1,#rewards.community do
		local value = math.floor((i*rewards.goodwill)/parts)
		local faction = rewards.community[#rewards.community+1-i]
		xr_effects.complete_task_inc_goodwill(nil, nil, {value, faction})
	end
end















