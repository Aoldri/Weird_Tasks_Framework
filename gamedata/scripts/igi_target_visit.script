TARGET_NAME = "visit"
PATTERN = "basic"

local WorldState = igi_world_state.WorldState
local trace_dbg = igi_helper.trace_dbg
MAX_DISTANCE_SQR = 2500

local function distance(position_1, position_2)
	local x = position_1.x - position_2.x
    local z = position_1.z - position_2.z
	return x*x + z*z
end

local function get_level_id(se_obj)
	return WorldState.gg:vertex(se_obj.m_game_vertex_id):level_id()
end

local function explode_path(entity)
	local names = str_explode(entity.path, ",")
	entity.name = names[1]
	entity.path = nil

	local clones = {}
	for i=2, #names do
		local new = entity:clone()
		new:set_order(new.entity_id)
		new.name = names[i]
		clones[#clones+1] = new
	end
	return clones
end

function setup_location(entity)
	if not entity.path then
		return igi_target_basic.setup_location(entity)
	end
	local clones = explode_path(entity)
	local new_entities = igi_target_basic.setup_location(entity)
	if not new_entities then return end

	for _, clone in ipairs(clones) do
		new_entities[#new_entities+1] = clone
		local new_clones = igi_target_basic.setup_location(clone)
		if not new_clones then return end
		for _, new_clone in ipairs(new_clones) do
			new_entities[#new_entities+1] = new_clone
		end
	end

	return new_entities
end

function is_complete(obj_data)
	local target = WorldState.objects[obj_data.id]
	local actor = WorldState.objects[0]
	if get_level_id(target) ~= get_level_id(actor) then
		return false end
	return distance(target.position, actor.position) < MAX_DISTANCE_SQR
end

function get_status(subtask)
    if is_complete(subtask) then return igi_subtask.TASK_STATUSES.COMPLETED end
    return igi_subtask.TASK_STATUSES.RUNNING
end

function get_completed_money(entity)
	return 300
end

function get_completed_goodwill(entity)
	return 10
end